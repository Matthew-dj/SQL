For this project imported a database into SQLLite for this project,
and used SQL to answer the questions below.


/* List of customers including their ID and country who are not in the US */

SELECT cust.CustomerId, cust.FirstName|| ' '|| cust.LastName AS Fullname, cust.Country
FROM chinook.customers cust
WHERE cust.Country != 'USA'
LIMIT 20;

/* List of customers from Brazil */

SELECT cust.CustomerId, cust.FirstName|| ' '|| cust.LastName AS Fullname, cust.Country
FROM chinook.customers cust
WHERE cust.Country = 'Brazil'
LIMIT 20;

/* Find the Invoices of customers who are from Brazil. Include the customer's full name, Invoice ID, Date of the invoice, and billing country */

SELECT cust.FirstName ||' '|| cust.LastName AS Fullname, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM chinook.customers cust
INNER JOIN chinook.invoices i
ON cust.CustomerId = i.CustomerId
WHERE cust.Country='Brazil';

/* Create a list of employees who are Sales Agents */

SELECT *
FROM chinook.employees em
WHERE em.Title LIKE '%agent%';

/*Create a list of unique billing countries from the invoice table */

SELECT DISTINCT(i.BillingCountry)
FROM chinook.invoices i;

/* Provide a list of invoices associated with each sales agent. */ 

SELECT i.InvoiceId, e.FirstName || ' ' || e.LastName AS Fullname
FROM chinook.employees e
INNER JOIN chinook.customers c
ON e.EmployeeId = c.SupportRepId
INNER JOIN chinook.invoices i
ON c.CustomerId=i.CustomerId;

/*Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.*/

SELECT emp.LastName, emp.Firstname, cust.FirstName, cust.LastName, cust.Country, inv.total
FROM chinook.employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId;

/* How many invoices were in 2009? */

SELECT COUNT(i.InvoiceId) AS number_of_invoices
FROM chinook.invoices i
WHERE InvoiceDate LIKE '2009%';

/* What are the total sales for 2009? */

SELECT SUM (ii.UnitPrice*ii.Quantity) AS total_sales
FROM chinook.invoice_items ii
INNER JOIN chinook.invoices i
ON ii.InvoiceId= i.InvoiceId
WHERE  InvoiceDate LIKE '2009%';

/* Create a list that includes the purchased track name with each invoice line ID */

SELECT ii.InvoiceLineId, t.Name
FROM chinook.invoice_items ii
INNER JOIN chinook.tracks t
ON ii.TrackId = t.TrackId;

/*Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.*/

SELECT  t.Name, a.Title AS album, ar.Name AS Artist, g.Name AS genre, mt.Name AS media_type
FROM chinook.tracks t
INNER JOIN chinook.albums a
ON t.AlbumId = a.AlbumId
INNER JOIN chinook.artists ar
ON a.ArtistId=ar.ArtistId
INNER JOIN chinook.genres g
ON t.GenreId=g.GenreId
INNER JOIN chinook.media_types mt
ON t.MediaTypeId= mt.MediaTypeId;

/* List the total sales made by each sales agent */

SELECT ROUND(SUM(it.UnitPrice*it.Quantity),2) AS Total_Sales, e.FirstName || ' ' || e.LastName AS Agent_name, e.Title
FROM chinook.employees e
INNER JOIN chinook.customers c
ON e.EmployeeId = c.SupportRepId
INNER JOIN chinook.invoices i
ON c.CustomerId=i.CustomerId
INNER JOIN chinook.invoice_items it
ON i.InvoiceId= it.InvoiceId
WHERE e.Title= 'Sales Support Agent'
GROUP BY Agent_name;

/* Which agent made the most dollars in 2009? */

SELECT ROUND(SUM (it.UnitPrice*it.Quantity),2) AS Total_Sales, e.FirstName || ' ' || e.LastName AS Agent_name, e.Title
FROM chinook.employees e
INNER JOIN chinook.customers c
ON e.EmployeeId = c.SupportRepId
INNER JOIN chinook.invoices i
ON c.CustomerId=i.CustomerId
INNER JOIN chinook.invoice_items it
ON i.InvoiceId= it.InvoiceId
WHERE i.InvoiceDate LIKE '2009%'
AND e.Title= 'Sales Support Agent'
GROUP BY Agent_name
ORDER BY Total_Sales DESC
LIMIT 1;
